from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
import asyncio
import keyboards as kb
import dataHandler
from ast import literal_eval

bot = Bot(token='8084300712:AAECjR_8MV-PznBhK47E3CBAc34uZc5gv5M')
dp = Dispatcher()

@dp.message(CommandStart())
async def startMessageHandler(message: Message):
    dataHandler.auth(int(message.from_user.id))

    await message.answer('<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å –±–æ—Ç–æ–º —Å –ø–æ–º–æ—â—å—é –Ω–∏–∂–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫. –ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!', reply_markup=kb.menu(), parse_mode='html')

@dp.message(F.text == '–°–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã')
async def showHandler(message: Message):
    await message.answer('<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤...</b>', reply_markup=kb.categories(), parse_mode='html')

# cart
@dp.message(F.text == '–ö–æ—Ä–∑–∏–Ω–∞ üõí')
async def cartHandler(message: Message):
    cart = dataHandler.return_cart(message.from_user.id)
    if str(cart) == '0':
        await message.answer(f'üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫–∞ —á—Ç–æ –ø—É—Å—Ç–∞...', parse_mode='html')
    else:
        cart = literal_eval(cart)

        positionFullnames = ''
        index = 1
        for position in cart:
            name = dataHandler.return_position_name(position) # –ß–∏—Ö—É–∞—Ö—É–∞ –∏–ª–∏ –õ–∞–±—Ä–∞–¥–æ—Ä
            positionFullnames += f'{index}. {name}\n'
            index += 1
            

        await message.answer(f'üõí <b>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:</b> \n\n{positionFullnames}', parse_mode='html', reply_markup=kb.order())

@dp.callback_query(F.data.startswith('back'))
async def backMenu(callback: CallbackQuery):
    await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    await callback.message.answer('<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤...</b>', reply_markup=kb.categories(), parse_mode='html')

@dp.callback_query(F.data.startswith('dogs'))
async def dogsShow(callback: CallbackQuery):
    await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    await callback.message.answer('üê∂ <b>–°–æ–±–∞–∫–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å –ø–æ—Ä–æ–¥—É...', reply_markup=kb.dogs(), parse_mode='html')

@dp.callback_query(F.data.startswith('cats'))
async def catsShow(callback: CallbackQuery):
    await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    await callback.message.answer('üêà <b>–ö–æ—Ç—ã</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å –ø–æ—Ä–æ–¥—É...', reply_markup=kb.cats(), parse_mode='html')

@dp.callback_query(F.data.startswith('cucumbers'))
async def cucsShow(callback: CallbackQuery):
    await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    await callback.message.answer('üêπ <b>–ì—Ä—ã–∑—É–Ω—ã</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å –ø–æ—Ä–æ–¥—É...', reply_markup=kb.cucu(), parse_mode='html')


# dogs
@dp.callback_query(F.data.startswith('buydog'))
async def buyDog(callback: CallbackQuery):
    index = callback.data[6:]
    await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    if int(index) == 1:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAID6Gek9IyhZFsPSW7Ezb6dwsUgXB3cAALs9TEbxcIoSRdjP7FW1n_zAQADAgADcwADNgQ', caption=f'–ß–∏—Ö—É–∞—Ö—É–∞\n\n–ß–∏—Ö—É–∞—Ö—É–∞ ‚Äî –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö –ø–æ—Ä–æ–¥ —Å–æ–±–∞–∫, –Ω–æ —Å –±–æ–ª—å—à–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º. –û–Ω–∏ –ø—Ä–µ–¥–∞–Ω—ã —Å–≤–æ–∏–º –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –∏ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—á–µ–Ω—å –∑–∞—â–∏—Ç–Ω—ã–º–∏, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Å–≤–æ–∏ —Å–∫—Ä–æ–º–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã. ', reply_markup=kb.addtocart(1))
    if int(index) == 2: 
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAID9Gek9S-6IobfaoZkpegt9sFuJIivAALt9TEbxcIoSfaVoUhDxpvFAQADAgADcwADNgQ', caption=f'–ù–µ–º–µ—Ü–∫–∞—è –æ–≤—á–∞—Ä–∫–∞\n\n–ù–µ–º–µ—Ü–∫–∞—è –æ–≤—á–∞—Ä–∫–∞ ‚Äî —É–º–Ω–∞—è –∏ –æ–±—É—á–∞–µ–º–∞—è –ø–æ—Ä–æ–¥–∞, –∏–¥–µ–∞–ª—å–Ω–∞—è –¥–ª—è —Å–ª—É–∂–±—ã –≤ –ø–æ–ª–∏—Ü–∏–∏ –∏ –∞—Ä–º–∏–∏. –≠—Ç–∏ —Å–æ–±–∞–∫–∏ –æ—á–µ–Ω—å –ø—Ä–µ–¥–∞–Ω–Ω—ã–µ –∏ –æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω—ã–µ, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∏—Ö –æ—Ç–ª–∏—á–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω—å–æ–Ω–∞–º–∏. ', reply_markup=kb.addtocart(2))
    if int(index) == 3:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAID9mek9UL8uLn3O36aKYJRYhVCguOjAALv9TEbxcIoSYI02RbzIP2tAQADAgADcwADNgQ', caption=f'–õ–∞–±—Ä–∞–¥–æ—Ä\n\n–õ–∞–±—Ä–∞–¥–æ—Ä ‚Äî —ç—Ç–æ –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω–∞—è –ø–æ—Ä–æ–¥–∞, –∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å–≤–æ–µ–π –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å—é –∏ —É–º–æ–º. –û–Ω–∏ –æ—Ç–ª–∏—á–Ω—ã–µ —Å–µ–º–µ–π–Ω—ã–µ —Å–æ–±–∞–∫–∏ –∏ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ª—é–¥–µ–π. ', reply_markup=kb.addtocart(3))
    if int(index) == 4:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAID-Gek9VOX8VvQDVvMw3sLrK8y-lkMAALw9TEbxcIoSVPMe47aOtlUAQADAgADcwADNgQ', caption=f'–î–≤–æ—Ä–Ω—è–≥–∞\n\n–î–≤–æ—Ä–Ω—è–≥–∞ ‚Äî —Å–æ–±–∞–∫–∞ –±–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –ø–æ—Ä–æ–¥—ã, –∫–æ—Ç–æ—Ä–∞—è, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –æ–±–ª–∞–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞–º–∏. –≠—Ç–∏ —Å–æ–±–∞–∫–∏ —á–∞—Å—Ç–æ –±–æ–ª–µ–µ —É—Å—Ç–æ–π—á–∏–≤—ã –∫ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º –∏ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—á–µ–Ω—å –ª—é–±—è—â–∏–º–∏ –∏ –≤–µ—Ä–Ω—ã–º–∏ —Å–ø—É—Ç–Ω–∏–∫–∞–º–∏.', reply_markup=kb.addtocart(4))
        
# cats
@dp.callback_query(F.data.startswith('buycat'))
async def buyCat(callback: CallbackQuery):
    index = callback.data[6:]
    await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    if int(index) == 1:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAIEBmek9aQWezyGa-uRK2hG9MpcAAHjPgAC8vUxG8XCKEnzmzFEiBuYEwEAAwIAA3MAAzYE', caption=f'–°–∏–∞–º—Å–∫–∞—è\n\n–°–∏–∞–º—Å–∫–∞—è –∫–æ—à–∫–∞ ‚Äî –≥—Ä–∞—Ü–∏–æ–∑–Ω–∞—è –∏ –æ–±—â–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ—Ä–æ–¥–∞, –∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å–≤–æ–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–º –æ–∫—Ä–∞—Å–æ–º –∏ —è—Ä–∫–∏–º–∏ –≥–æ–ª—É–±—ã–º–∏ –≥–ª–∞–∑–∞–º–∏. –û–Ω–∏ –æ—á–µ–Ω—å —Ä–∞–∑–≥–æ–≤–æ—Ä—á–∏–≤—ã –∏ –ª—é–±—è—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –ª—é–¥—å–º–∏, —Å—Ç–∞–Ω–æ–≤—è—Å—å –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ –∫–æ–º–ø–∞–Ω—å–æ–Ω–∞–º–∏.', reply_markup=kb.addtocart(5))
    if int(index) == 2:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAIECGek9bPBCqB54k6Qb46ZD4uXlL3kAALz9TEbxcIoSaLrtEUledfRAQADAgADcwADNgQ', caption=f'–ë—Ä–∏—Ç–∞–Ω—Å–∫–∞—è\n\n–ë—Ä–∏—Ç–∞–Ω—Å–∫–∞—è –∫–æ—à–∫–∞ ‚Äî –∫—Ä—É–ø–Ω–∞—è –∏ –º—É—Å–∫—É–ª–∏—Å—Ç–∞—è –ø–æ—Ä–æ–¥–∞ —Å –≥—É—Å—Ç–æ–π —à–µ—Ä—Å—Ç—å—é –∏ –∫—Ä—É–≥–ª–æ–π –≥–æ–ª–æ–≤–æ–π. –û–Ω–∏ —Å–ø–æ–∫–æ–π–Ω—ã –∏ —É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω—ã, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∏—Ö –æ—Ç–ª–∏—á–Ω—ã–º–∏ –¥–æ–º–∞—à–Ω–∏–º–∏ –ª—é–±–∏–º—Ü–∞–º–∏.', reply_markup=kb.addtocart(6))
    if int(index) == 3:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAIECmek9clTVsp8oU608iVNepv1lp5cAAL09TEbxcIoSc5Q6uIYUjxNAQADAgADcwADNgQ', caption=f'–ú–µ–π–Ω–∫—É–Ω\n\n–ú–µ–π–Ω–∫—É–Ω ‚Äî –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö –ø–æ—Ä–æ–¥ –¥–æ–º–∞—à–Ω–∏—Ö –∫–æ—à–µ–∫ —Å –¥–ª–∏–Ω–Ω–æ–π —à–µ—Ä—Å—Ç—å—é –∏ –ø—É—à–∏—Å—Ç—ã–º —Ö–≤–æ—Å—Ç–æ–º. –û–Ω–∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –∏ –∏–≥—Ä–∏–≤—ã–µ, –æ–±–ª–∞–¥–∞—é—Ç —Ö–æ—Ä–æ—à–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º –∏ –ª—é–±—è—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è —Å —Å–µ–º—å—è–º–∏.', reply_markup=kb.addtocart(7))
    if int(index) == 4:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAIEDGek9d6b4JjW6PhJ8Oafu0TuAAE9XgAC9fUxG8XCKEm6y4aBAZ3p-gEAAwIAA3MAAzYE', caption=f'–ö–æ—Ç –°–µ–º—ë–Ω\n\n–°–µ–º—ë–Ω  ‚Äî —ç—Ç–æ –∫–æ—Ç, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –ø–æ—Ä–æ–¥—ã, —á—Ç–æ –ø—Ä–∏–¥–∞–µ—Ç –µ–º—É —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä. –û–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ –ø–æ –ø–æ–≤–µ–¥–µ–Ω–∏—é –∏ –æ–∫—Ä–∞—Å—É, –Ω–æ —á–∞—Å—Ç–æ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≤–µ—Ä–Ω—ã–º–∏ –∏ –ª—é–±—è—â–∏–º–∏ –¥—Ä—É–∑—å—è–º–∏.', reply_markup=kb.addtocart(8))
        
# cucumbers
@dp.callback_query(F.data.startswith('buycuc'))
async def buyCuc(callback: CallbackQuery):
    index = callback.data[6:]
    await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    if int(index) == 1:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAIEDmek9gW1k55tTYqyQAHQiITYEdlNAAL29TEbxcIoSW-uHR4J4Ii3AQADAgADcwADNgQ', caption=f'–•–æ–º—è–∫\n\n–•–æ–º—è–∫ ‚Äî –º–∞–ª–µ–Ω—å–∫–∏–π –∏ –º–∏–ª—ã–π –≥—Ä—ã–∑—É–Ω, –∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–≤–æ–∏–º –∞–∫—Ç–∏–≤–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∂–∏–∑–Ω–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –Ω–æ—á—å—é. –û–Ω–∏ —Ç—Ä–µ–±—É—é—Ç –Ω–µ–±–æ–ª—å—à–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏ —è–≤–ª—è—é—Ç—Å—è –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –¥–æ–º–∞—à–Ω–∏–º–∏ –ª—é–±–∏–º—Ü–∞–º–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤–æ–µ–π –∏–≥—Ä–∏–≤–æ–π –Ω–∞—Ç—É—Ä–µ.', reply_markup=kb.addtocart(9))
    if int(index) == 2:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAIEEGek9hBkBlq-hSRnsrAgwo-pM6jIAAL39TEbxcIoSUQ5EHrMBtg0AQADAgADcwADNgQ', caption=f'–í—ã–¥—Ä–∞\n\n–í—ã–¥—Ä–∞, —Ö–æ—Ç—å –∏ –Ω–µ —Å–æ–≤—Å–µ–º –≥—Ä—ã–∑—É–Ω, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ö–∏—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —á–∞—Å—Ç–æ –æ–±–∏—Ç–∞–µ—Ç –≤ –≤–æ–¥–æ–µ–º–∞—Ö. –û–Ω–∏ –æ–±–ª–∞–¥–∞—é—Ç –∏–≥—Ä–∏–≤—ã–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º –∏ –∞–∫—Ç–∏–≤–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç —Å–æ —Å–≤–æ–∏–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∏—Ö —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º–∏ –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è.', reply_markup=kb.addtocart(10))
    if int(index) == 3:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAIEEmek9h0wyAn7_yq9bMlTKKdzSmpAAAL59TEbxcIoSWkpv9us17DHAQADAgADcwADNgQ', caption=f'–ö—Ä–æ–ª–∏–∫\n\n–ö—Ä–æ–ª–∏–∫ ‚Äî –æ–±–∞—è—Ç–µ–ª—å–Ω—ã–π –∏ –º—è–≥–∫–∏–π –≥—Ä—ã–∑—É–Ω, –∫–æ—Ç–æ—Ä—ã–π —Å–ª–∞–≤–∏—Ç—Å—è —Å–≤–æ–∏–º –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ —Å–ø–æ–∫–æ–π–Ω—ã–º –Ω—Ä–∞–≤–æ–º. –≠—Ç–∏ –∂–∏–≤–æ—Ç–Ω—ã–µ –º–æ–≥—É—Ç —Å—Ç–∞—Ç—å –æ—Ç–ª–∏—á–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω—å–æ–Ω–∞–º–∏ –∏ —Ç—Ä–µ–±—É—é—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –≤–Ω–∏–º–∞–Ω–∏—è.', reply_markup=kb.addtocart(11))
    if int(index) == 4:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAIEFGek9itkgdgbrvKhxbXGGbqVeclHAAL69TEbxcIoSXLO0y4YZCn8AQADAgADcwADNgQ', caption=f'–ö—Ä—ã—Å–∞\n\n–ö—Ä—ã—Å–∞ ‚Äî —É–º–Ω—ã–π –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –≥—Ä—ã–∑—É–Ω, –æ–±–ª–∞–¥–∞—é—â–∏–π –≤—ã–¥–∞—é—â–∏–º—Å—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º –∏ —Ö–æ—Ä–æ—à–∏–º–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏. –û–Ω–∏ —á–∞—Å—Ç–æ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–º–∏ –¥–æ–º–∞—à–Ω–∏–º–∏ –ø–∏—Ç–æ–º—Ü–∞–º–∏, —É–º–µ—é—â–∏–º–∏ –æ–±—É—á–∞—Ç—å—Å—è —Ç—Ä—é–∫–∞–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∫—Ä–µ–ø–∫–∏–µ —Å–≤—è–∑–∏ —Å —Ö–æ–∑—è–µ–≤–∞–º–∏.', reply_markup=kb.addtocart(12))

        
# add to cart
@dp.callback_query(F.data.startswith('add'))
async def addtocartHabndler(callback: CallbackQuery):
    position = int(callback.data[3:]) # 3 or 5 or 13
    await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    #await callback.message.answer(callback.data[3:])
    await callback.message.answer('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É! ‚úÖ', reply_markup=kb.check_cart())

    dataHandler.add_to_cart(callback.from_user.id, position)
    
# clear 
@dp.callback_query(F.data.startswith('clear'))
async def clearHandler(callback: CallbackQuery):
    await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    dataHandler.clear_cart(callback.from_user.id)
    await callback.message.answer('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞.')

# order
@dp.callback_query(F.data.startswith('order'))
async def orderHandler(callback: CallbackQuery):
    await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    await callback.message.answer('‚ùì –í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –§–ò–û...')
    dataHandler.set_waiting_status(callback.from_user.id, 1)

@dp.message(F.photo)
async def handle_photo(message: Message):
    await message.answer(f'Photo id is {message.photo[0].file_id}')


@dp.message()
async def anyHandler(message: Message):
    admin = 940722904
    status_fio = dataHandler.return_status(message.from_user.id, 1)
    status_number = dataHandler.return_status(message.from_user.id, 2)
    status_address = dataHandler.return_status(message.from_user.id, 3)

    if status_fio == '1':
        print('STATUIS FIO', status_fio)
        dataHandler.set_status(message.from_user.id, 1, message.text)
        await bot.delete_message(message.chat.id, message.message_id)
        await bot.delete_message(message.chat.id, message.message_id-1)
        await message.answer('‚ùì –í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞...')
        dataHandler.set_waiting_status(message.from_user.id, 2)

    if status_number == '1':
        dataHandler.set_status(message.from_user.id, 2, message.text)
        await bot.delete_message(message.chat.id, message.message_id)
        await bot.delete_message(message.chat.id, message.message_id-1)
        await message.answer('‚ùì –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏...')
        dataHandler.set_waiting_status(message.from_user.id, 3)

    if status_address == '1':
        dataHandler.set_status(message.from_user.id, 3, message.text)
        await bot.delete_message(message.chat.id, message.message_id)
        await bot.delete_message(message.chat.id, message.message_id-1)

        cart = dataHandler.return_cart(message.from_user.id)
        cart = literal_eval(cart)
        positionFullnames = ''
        index = 1
        for position in cart:
            name = dataHandler.return_position_name(position) # –ß–∏—Ö—É–∞—Ö—É–∞ –∏–ª–∏ –õ–∞–±—Ä–∞–¥–æ—Ä
            positionFullnames += f'{index}. {name}\n'
            index += 1
            

        await message.answer(f'–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! ‚úÖ\n\n‚≠êÔ∏è –§–ò–û: {dataHandler.return_status(message.from_user.id, 1)}\n‚òéÔ∏è –ù–æ–º–µ—Ä: {dataHandler.return_status(message.from_user.id, 2)}\nüìç –ê–¥—Ä–µ—Å: {dataHandler.return_status(message.from_user.id, 3)}\n\nüõí –ü–æ–∫—É–ø–∫–∏: \n{positionFullnames}')  
        await bot.send_message(940722904, f'–ù–æ–≤—ã–π –∑–∞–∫–∞–∑! ‚ö°Ô∏è\n\n‚≠êÔ∏è –§–ò–û: {dataHandler.return_status(message.from_user.id, 1)}\n‚òéÔ∏è –ù–æ–º–µ—Ä: {dataHandler.return_status(message.from_user.id, 2)}\nüìç –ê–¥—Ä–µ—Å: {dataHandler.return_status(message.from_user.id, 3)}\n\nüõí –ü–æ–∫—É–ø–∫–∏: \n{positionFullnames}')
        dataHandler.clear_cart(message.from_user.id)

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())